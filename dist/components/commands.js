var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { Keyboard, InputFile, } from 'grammy';
import fs from "fs";
import path from "path";
import { dirname } from 'path';
import { writeFileSync, readFileSync } from 'fs';
import { bot } from './createBot.js';
import { statisticsManager } from "./statisticsManager.js";
import { replyWithoutCounting } from "./saveCurrentStatistics.js";
import { exec } from 'child_process';
import { fileURLToPath } from 'url';
// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
const keyboard = new Keyboard().text('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞').text('üì§ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞').text('üó≥Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º').resized();
// –ü–æ–ª—É—á–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const allowedUsers = process.env.ALLOWED_USERS ? process.env.ALLOWED_USERS.split(',').map(id => parseInt(id.trim())) : [];
bot.command('start', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        if (((_b = ctx.chat) === null || _b === void 0 ? void 0 : _b.type) !== 'private') {
            return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ª–∏—á–Ω—ã–π —á–∞—Ç
        }
        yield ctx.reply('–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.', {
            reply_markup: keyboard, // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ keyboard –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
        });
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
    }
    else {
        yield ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}));
bot.hears('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        const dateTime = new Date().toLocaleString();
        yield replyWithoutCounting(ctx, `–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${dateTime}\n- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${statisticsManager.getMessageCount()}\n- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${statisticsManager.getOutgoingMessageCount()}\n- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${statisticsManager.getGroupMessageCount()}`);
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
    }
    else {
        yield ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}));
bot.on('callback_query', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    const callbackData = ctx.callbackQuery.data;
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        if (callbackData === 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') {
            yield ctx.answerCallbackQuery();
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∞ –∑–¥–µ—Å—å
            console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            return;
        }
    }
    else {
        yield ctx.answerCallbackQuery('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ callback');
    }
}));
bot.hears('üì§ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    const inputFile = new InputFile('reports/statistics.csv'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
            yield ctx.replyWithDocument(inputFile, { caption: '–í–∞—à —Ñ–∞–π–ª —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π' });
        }
        catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞:', error);
            yield ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
    else {
        yield ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
    return; // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤—Ö–æ–¥—è—â–µ–µ
}));
bot.hears('/restart', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        exec('pm2 restart statistics_bot', (error, _stdout, stderr) => {
            if (error) {
                ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: ${stderr}`);
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: ${error.message}`);
            }
            else {
                ctx.reply('–ü—Ä–æ—Ü–µ—Å—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.');
                console.log('–ü—Ä–æ—Ü–µ—Å—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
            }
        });
    }
    else {
        yield ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}));
bot.hears('üó≥Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    const reportsDir = './reports'; // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –æ—Ç—á–µ—Ç–∞–º–∏
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        try {
            const files = fs.readdirSync(reportsDir)
                .filter(file => path.extname(file) === '.csv' && file.startsWith('full')) // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ CSV —Ñ–∞–π–ª—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å 'full'
                .map(file => ({ name: file, time: fs.statSync(path.join(reportsDir, file)).mtime.getTime() }))
                .sort((a, b) => b.time - a.time) // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
                .slice(0, 2) // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Ñ–∞–π–ª–∞
                .map(file => path.join(reportsDir, file.name));
            if (files.length === 0) {
                yield ctx.reply('–í –ø–∞–ø–∫–µ reports –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.');
                return;
            }
            // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
            for (const file of files) {
                const inputFile = new InputFile(file);
                yield ctx.replyWithDocument(inputFile, { caption: `–í–∞—à —Ñ–∞–π–ª —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π: ${path.basename(file)}` });
            }
        }
        catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤:', error);
            yield ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
    else {
        yield ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
    return; // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤—Ö–æ–¥—è—â–µ–µ
}));
//–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∞—Ä—Ö–∏–≤–æ–≤:
bot.hears('/downloadallarchive', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    const dirPath = 'reports'; // –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏
    const files = fs.readdirSync(dirPath); // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    const gzFiles = files.filter(file => path.extname(file) === '.gz'); // –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .gz
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        if (gzFiles.length === 0) {
            yield ctx.reply('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .gz.');
            return;
        }
        try {
            for (const file of gzFiles) {
                const inputFile = new InputFile(path.join(dirPath, file)); // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
                yield ctx.replyWithDocument(inputFile, { caption: `–í–∞—à —Ñ–∞–π–ª: ${file}` }); // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
            }
        }
        catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞:', error);
            yield ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
    else {
        yield ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ä—Ö–∏–≤–∞–º –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
    return; // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤—Ö–æ–¥—è—â–µ–µ
}));
//–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ env –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–º–∞–Ω–¥–µ.
// –û–ø—Ä–µ–¥–µ–ª—è–µ–º __dirname –¥–ª—è ES-–º–æ–¥—É–ª–µ–π
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ chatId
let waitingForUserId = false;
let targetChatId = null; // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –≥–¥–µ –Ω–∞—á–∞–ª—Å—è –¥–∏–∞–ª–æ–≥
let timeoutId = null; // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–∞–π–º–µ—Ä–∞
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã "/add_user"
bot.hears('/add_user', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    const userId = (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id;
    const chatId = (_b = ctx.chat) === null || _b === void 0 ? void 0 : _b.id;
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ userId –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω
    if (userId !== undefined && allowedUsers.includes(userId)) {
        waitingForUserId = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è
        targetChatId = chatId !== null && chatId !== void 0 ? chatId : null; // –ï—Å–ª–∏ chatId undefined, –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º null
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ 60 —Å–µ–∫—É–Ω–¥
        if (timeoutId) {
            clearTimeout(timeoutId); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
        }
        timeoutId = setTimeout(() => __awaiter(void 0, void 0, void 0, function* () {
            if (waitingForUserId) {
                waitingForUserId = false;
                targetChatId = null;
                console.log('–¢–∞–π–º–∞—É—Ç: –¥–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω.');
                yield ctx.reply('–í—Ä–µ–º—è –≤–≤–æ–¥–∞ ID –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /add_user.');
            }
        }), 60000); // 60 —Å–µ–∫—É–Ω–¥
        yield ctx.reply('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ env:');
    }
    else {
        yield ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ /add_user –æ—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}));
// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message:text', (ctx, next) => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    const messageText = (_a = ctx.message) === null || _a === void 0 ? void 0 : _a.text;
    const chatId = (_b = ctx.chat) === null || _b === void 0 ? void 0 : _b.id;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ —Ç–æ–≥–æ –∂–µ —á–∞—Ç–∞, –≥–¥–µ –Ω–∞—á–∞–ª—Å—è –¥–∏–∞–ª–æ–≥
    if (waitingForUserId && chatId !== undefined && chatId === targetChatId) {
        if (messageText && /^\d+$/.test(messageText)) {
            const userId = messageText;
            addUserToEnv(userId);
            yield ctx.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –¥–æ–±–∞–≤–ª–µ–Ω –≤ ALLOWED_USERS.`);
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Ç–∞–π–º–∞—É—Ç
            waitingForUserId = false;
            targetChatId = null;
            if (timeoutId) {
                clearTimeout(timeoutId); // –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–∞—É—Ç
                timeoutId = null;
            }
        }
        else if (waitingForUserId) {
            yield ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞).');
        }
    }
    // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É middleware
    yield next();
}));
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ ALLOWED_USERS
function addUserToEnv(userId) {
    const envPath = path.join(__dirname, '../../.env');
    const envContent = readFileSync(envPath, 'utf-8');
    const lines = envContent.split('\n');
    const updatedLines = lines.map(line => {
        if (line.startsWith('ALLOWED_USERS=')) {
            const currentUsers = line.split('=')[1].split(',');
            if (!currentUsers.includes(userId)) {
                currentUsers.push(userId);
            }
            return `ALLOWED_USERS=${currentUsers.join(',')}`; // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è
        }
        return line;
    });
    writeFileSync(envPath, updatedLines.join('\n'), 'utf-8');
}
