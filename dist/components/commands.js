var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { Keyboard, InputFile } from 'grammy';
import fs from "fs";
import path from "path";
import { bot } from './createBot.js';
import { statisticsManager } from "./statisticsManager.js";
import { replyWithoutCounting } from "./saveCurrentStatistics.js";
// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
const keyboard = new Keyboard().text('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞').text('üì§ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞').text('üó≥Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º').resized();
bot.command('start', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    yield ctx.reply('–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.', {
        reply_markup: keyboard,
    });
}));
bot.hears('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const dateTime = new Date().toLocaleString();
    yield replyWithoutCounting(ctx, `–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${dateTime}\n- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${statisticsManager.getMessageCount()}\n- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${statisticsManager.getOutgoingMessageCount()}\n- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${statisticsManager.getGroupMessageCount()}`);
    return;
}));
bot.on('callback_query', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const callbackData = ctx.callbackQuery.data;
    if (callbackData === 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') {
        yield ctx.answerCallbackQuery();
        return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    }
}));
bot.hears('üì§ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const inputFile = new InputFile('reports/statistics.csv'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
        yield ctx.replyWithDocument(inputFile, { caption: '–í–∞—à —Ñ–∞–π–ª —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π' });
    }
    catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞:', error);
        yield ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
    return; // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤—Ö–æ–¥—è—â–µ–µ
}));
bot.hears('üó≥Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º', (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const reportsDir = './reports'; // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –æ—Ç—á–µ—Ç–∞–º–∏
    try {
        const files = fs.readdirSync(reportsDir)
            .filter(file => path.extname(file) === '.csv' && file.startsWith('full')) // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ CSV —Ñ–∞–π–ª—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å 'full'
            .map(file => ({ name: file, time: fs.statSync(path.join(reportsDir, file)).mtime.getTime() }))
            .sort((a, b) => b.time - a.time) // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
            .slice(0, 2) // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Ñ–∞–π–ª–∞
            .map(file => path.join(reportsDir, file.name));
        if (files.length === 0) {
            yield ctx.reply('–í –ø–∞–ø–∫–µ reports –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.');
            return;
        }
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
        for (const file of files) {
            const inputFile = new InputFile(file);
            yield ctx.replyWithDocument(inputFile, { caption: `–í–∞—à —Ñ–∞–π–ª —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π: ${path.basename(file)}` });
        }
    }
    catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤:', error);
        yield ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
    return; // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤—Ö–æ–¥—è—â–µ–µ
}));
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
